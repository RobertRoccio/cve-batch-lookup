'''
A tool for quickly retrieving the descriptions and CVSS scores for a large number of CVEs and listing them in order of severity.

This is intended to automate some work for intelligence analysts and other cybersecurity professionals.

List CVEs for lookup into a text file according to the example provided: CVE-XXXXX&CVE-XXXXX...

Usage: python3 cve-batch-lookup.py filename
'''

import requests
import sys
import json

def main():
    try:
        print("CVE Batch Lookup Starting...\n")
        if len(sys.argv) < 2:
            raise FileNotFoundError
        f = open(sys.argv[1], 'r')
        print("File opened successfully...\n")
        input_text = f.read()
        f.close()
        cve_list = input_text.split('&')
        descriptions = {}
        results = []
        print("Starting API calls...\n")
        for cve in cve_list:
            response = requests.get('https://services.nvd.nist.gov/rest/json/cve/1.0/' + cve)
            json_res = response.json()
            desc = json_res["result"]["CVE_Items"][0]["cve"]["description"]["description_data"][0]["value"]
            cvss = json_res["result"]["CVE_Items"][0]["impact"]["baseMetricV3"]["impactScore"]
            results.append((cve, cvss))
            descriptions[cve] = desc
        results.sort(key=lambda x:x[1], reverse=True)
        print("Results:\n")
        for i in range(len(results)):
            print(results[i][0] + "  " + str(descriptions[results[i][0]]) + " CVSS V3 Score: " + str(results[i][1]) + "\n")
    except FileNotFoundError:
        print("You must provide a valid filename as an argument.")
    except KeyError:
        print("One or more of the CVE IDs in the provided file was invalid.")

if __name__ == "__main__":
    main()